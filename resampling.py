# -*- coding: utf-8 -*-
"""Resampling.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XezyahHcOWhlEO5FRKukJ17Erdgb96ft

# ***Resizing with downsampling***
https://www.kaggle.com/code/chrisfilo/resizing-reshaping-and-resampling-nifti-files#Resampling-with-cropping/padding
"""

#pip install nilearn

from nilearn.image import resample_img
import pylab as plt
import nibabel as nib
import numpy as np
from scipy.ndimage import zoom
from google.colab import drive
drive.mount('/content/drive', force_remount=True)

# Load the NIfTI image
nifti_output_path_1 = "/content/drive/My Drive/Datasets/nifti/S_37_T1.nii.gz"
nifti_img = nib.load(nifti_output_path_1)

# Get the data array from the NIfTI image
data = nifti_img.get_fdata()

np.round(nifti_img.affine)

nifti_img.shape

nifti_img.header.get_zooms()

# Define the target voxel dimensions
target_voxel_dims = (1.0, 1.0, 1.0)  # Target voxel size in mm (x, y, z)

# Calculate the scaling factor for resampling
current_voxel_dims = nifti_img.header.get_zooms()
scaling_factor = [t/c for t, c in zip(target_voxel_dims, current_voxel_dims)]

# Create a 4x4 diagonal matrix with the scaling factors
scaling_matrix = np.eye(4)
scaling_matrix[:3, :3] = np.diag(scaling_factor)

# Resample the image using cubic interpolation
resampled_data = zoom(data, scaling_factor, mode='nearest')

# Update the NIfTI image header with the new voxel dimensions
new_affine = nifti_img.affine.dot(scaling_matrix)
new_img = nib.Nifti1Image(resampled_data, new_affine, header=nifti_img.header)

print(new_img.shape)
# Save the resampled image
nib.save(new_img, 'resampled_image.nii.gz')
plt.imshow(new_img.dataobj[:,:,80])
plt.axis('off')
plt.title('Resampled MRI Image')

"""# ***Downsampling***"""

downsampled_nii = resample_img(nifti_img, target_affine=np.eye(3)*2., interpolation='nearest')

downsampled_nii.affine

downsampled_nii.shape

plt.imshow(downsampled_nii.dataobj[:,:,50])
plt.axis('off')
plt.title('Downsampling MRI Image')

"""# ***Upsampling***"""

upsampled_nii = resample_img(nifti_img, target_affine=np.eye(3)*0.5, interpolation='nearest')

upsampled_nii.affine

upsampled_nii.shape

plt.imshow(upsampled_nii.dataobj[:,:,200])
plt.axis('off')
plt.title('Upsampling MRI Image')
